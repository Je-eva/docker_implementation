# Docker Workflow Notes

1. Build Docker Image
   docker build -t welcome-app .
   - `-t welcome-app`: Tags the image as `welcome-app`.
   - `.`: Refers to the current folder containing the `Dockerfile`.

2. Run Docker Container
   docker run -p 5000:5000 welcome-app
   - `5000:5000`: Maps the host port to the container port.
   - Check the application by visiting `http://localhost:5000` on your browser.

## Managing Docker Images and Containers
3. List Running Containers
   docker ps

4. Stop a Running Container
   docker stop <CONTAINER_ID>

5. Remove an Image
   docker rmi <IMAGE_ID>
   - Use `-f` to force remove an image:
     docker rmi -f <IMAGE_ID>

6. Tagging a Docker Image
   docker tag <old_name> <new_name>
   - Example:
     docker tag welcome-app jeevaj3v/welcome-app
   - Required for pushing to Docker Hub: Format is `username/repository_name`.

---

## Pushing and Pulling Images
7. Log in to Docker Hub
   docker login

8. Push an Image to Docker Hub
   docker push jeevaj3v/welcome-app

9. Pull an Image from Docker Hub
   docker pull jeevaj3v/welcome-app

10. Run Pulled Image
    docker run -d -p 5000:5000 jeevaj3v/welcome-app
    - `-d`: Runs the container in detached mode.


## Additional Notes
1. Use `docker compose up` for managing multi-container applications.
2. The `COPY . .` command in Dockerfile ensures all files in the current folder are imported into the image.
   - **Tip**: Ensure unnecessary files are not in the folder before building.
